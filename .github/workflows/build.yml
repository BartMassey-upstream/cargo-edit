name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        toolchain: [stable, beta, nightly]
    steps:
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        override: true
    - uses: actions/checkout@v2
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
    - name: Build
      run: cargo build --verbose
      continue-on-error: ${{ matrix.toolchain != 'stable' }}
    - name: Run tests
      run: cargo test --verbose
      continue-on-error: ${{ matrix.toolchain != 'stable' }}
    - name: Run tests (vendored-openssl)
      run: cargo test --features vendored-openssl --verbose
      continue-on-error: ${{ matrix.toolchain != 'stable' }}

  clippy:
    name: clippy (ubuntu-latest, stable)
    runs-on: ubuntu-latest
    steps:
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('Cargo.lock') }}
      - name: Cargo Clippy
        run: cargo clippy -- -D warnings -A deprecated

  fmt:
    name: fmt (ubuntu-latest, stable)
    runs-on: ubuntu-latest
    steps:
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Check Formatting
        run: cargo fmt --all -- --check
